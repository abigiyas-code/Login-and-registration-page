// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: query.sql

package sqlc

import (
	"context"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO accounts (
    firstname, lastname, emailaddress, username, password
)
VALUES(
    $1, $2, $3, $4, $5
) RETURNING id, firstname, lastname, emailaddress, username, password, created_at
`

type CreateAccountParams struct {
	Firstname    string `json:"firstname"`
	Lastname     string `json:"lastname"`
	Emailaddress string `json:"emailaddress"`
	Username     string `json:"username"`
	Password     int64  `json:"password"`
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error) {
	row := q.queryRow(ctx, q.createAccountStmt, createAccount,
		arg.Firstname,
		arg.Lastname,
		arg.Emailaddress,
		arg.Username,
		arg.Password,
	)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Firstname,
		&i.Lastname,
		&i.Emailaddress,
		&i.Username,
		&i.Password,
		&i.CreatedAt,
	)
	return i, err
}

const getAccount = `-- name: GetAccount :one
SELECT id, firstname, lastname, emailaddress, username, password, created_at FROM accounts
WHERE username= $1 
AND password= $2 LIMIT 1
`

type GetAccountParams struct {
	Username string `json:"username"`
	Password int64  `json:"password"`
}

func (q *Queries) GetAccount(ctx context.Context, arg GetAccountParams) (Account, error) {
	row := q.queryRow(ctx, q.getAccountStmt, getAccount, arg.Username, arg.Password)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Firstname,
		&i.Lastname,
		&i.Emailaddress,
		&i.Username,
		&i.Password,
		&i.CreatedAt,
	)
	return i, err
}

const getAccountByUsername = `-- name: GetAccountByUsername :one
SELECT id, firstname, lastname, emailaddress, username, password, created_at FROM accounts
WHERE username= $1 LIMIT 1
`

func (q *Queries) GetAccountByUsername(ctx context.Context, username string) (Account, error) {
	row := q.queryRow(ctx, q.getAccountByUsernameStmt, getAccountByUsername, username)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Firstname,
		&i.Lastname,
		&i.Emailaddress,
		&i.Username,
		&i.Password,
		&i.CreatedAt,
	)
	return i, err
}
